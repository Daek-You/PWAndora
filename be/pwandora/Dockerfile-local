# -----------------------------
# 1) Build Stage
# -----------------------------
FROM eclipse-temurin:17-jdk-alpine AS builder

WORKDIR /app

COPY build.gradle settings.gradle gradlew .
COPY gradle/ ./gradle/

RUN chmod +x gradlew

RUN ./gradlew --no-daemon build --dry-run || true

COPY src ./src

RUN ./gradlew --no-daemon clean build -x test --parallel --build-cache

# -----------------------------
# 2) Runtime Stage
# -----------------------------
FROM eclipse-temurin:17-jre-alpine

WORKDIR /app

RUN apk update && apk add --no-cache \
    nodejs \
    npm \
    chromium \
    chromium-swiftshader \
    harfbuzz \
    nss \
    freetype \
    ttf-freefont \
    font-noto-emoji \
    udev \
    ttf-opensans \
    dbus \
    dbus-x11 \
    upower \
    && rm -rf /var/cache/apk/*

# Chromium과 관련 디렉토리에 실행 권한 부여
RUN chmod -R 755 /usr/bin/chromium-browser \
    && chmod -R 755 /usr/lib/chromium/ \
    && ln -sf /usr/bin/chromium-browser /usr/bin/chromium

RUN npm install -g lighthouse

COPY --from=builder /app/build/libs/*.jar app.jar

RUN mkdir -p /tmp/lighthouse
RUN chmod 777 /tmp/lighthouse

# Chrome 환경 변수 최적화
ENV CHROME_BIN=/usr/bin/chromium-browser 
ENV CHROME_PATH=/usr/bin/chromium-browser
ENV LIGHTHOUSE_CHROMIUM_PATH=/usr/bin/chromium-browser
ENV NODE_PATH=/usr/lib/node_modules

# Shared memory 증가 (Chrome이 필요로 함)
RUN mkdir -p /dev/shm && chmod 777 /dev/shm

# 디버깅을 위한 볼륨 추가
VOLUME ["/tmp/lighthouse"]

# DBus 실행 전 디렉터리 생성
RUN mkdir -p /var/run/dbus && chmod 755 /var/run/dbus

# DBus 설정 추가
ENV DBUS_SESSION_BUS_ADDRESS=unix:path=/var/run/dbus/system_bus_socket

# CHROME_FLAGS 환경 변수 최적화
ENV CHROME_FLAGS="--headless --disable-gpu --no-sandbox --disable-dev-shm-usage --disable-software-rasterizer --disable-setuid-sandbox --disable-features=VizDisplayCompositor --disable-vulkan"

# DBus 실행 후 Java 실행
ENTRYPOINT sh -c "dbus-daemon --system --address=unix:path=/var/run/dbus/system_bus_socket & java -jar app.jar"